
@{
    ViewData["Title"] = "Index";
}

<html>
<head>
    <style>
        body{
            height:400px;
            width:400px;
        }
        #defaultCanvas0 {
            position: absolute;
            height: 800px;
            width: 1400px;
            top:70px;
            left:16px;
            display:inline-block;
        }
        select {
            text-align: center;
            text-align-last: center;
        }

        option {
            text-align: left;

        }
        #container {
            height: 400px;
            width: 400px;
        }
    </style>
</head>
<body>
    
    <script>

        function removeFromArray(arr, elt) {
            for (var i = arr.length - 1; i >= 0; i--) {
                if (arr[i] == elt) {
                    arr.splice(i, 1);
                }
            }
        }

        function heuristic(a, b) {
            //var d = dist(a.i, a.j, b.i, b.j);
            var d = abs(a.i - b.i) + abs(a.j - b.j);
            return d;
        }

        var cols = 50;
        var rows = 50;
        var grid = new Array(cols);
        var openSet = [];
        var closedSet = [];
        var start;
        var end;
        var w;
        var h;
        var path = [];
        var zidovi = "2,21,2,22,3,22,4,22,5,22,6,22,7,22,7,23,8,23,9,23,10,23,11,23,12,23,13,23,14,23,15,23,16,23,17,23,18,23,19,23,20,23,21,23,22,23,23,23,24,23,25,23,26,23,27,23,28,22,29,22,30,22,31,22,32,21,32,22,31,21,30,21,29,21,28,20,27,20,26,20,25,20,24,20,23,20,22,20,21,20,20,20,19,20,18,20,16,20,17,20,15,20,13,20,14,20,12,20,11,20,10,20,8,20,9,20,7,20,6,20,5,21,4,21,2,21,3,21,28,7,28,8,28,9,28,10,29,10,30,10,31,10,32,10,33,10,33,9,33,8,33,7,32,7,31,7,30,7,29,7,2,24,2,25,2,26,3,27,4,28,5,29,6,30,7,31,8,32,9,33,10,34,11,35,12,36,13,36,14,37,15,37,16,37,15,36,15,35,14,34,13,33,13,32,12,32,12,31,11,31,11,30,10,29,8,28,7,27,6,26,9,29,5,25,4,25,3,24";
        var intZidovi = zidovi.split(",");
        var xniz = new Array();
        var yniz = new Array();
        var brojacX = 0;
        var brojacY = 1;
        for (var i = 0; i < intZidovi.length; i++) {

            if (isNaN(intZidovi[brojacX]) == false) {
                xniz.push(intZidovi[brojacX]);
            }
            brojacX += 2;
            if (isNaN(intZidovi[brojacY]) == false) {
                yniz.push(intZidovi[brojacY]);
            }
            brojacY += 2;
        }

        for (var i = 0; i < xniz.length; i++) {
            xniz[i] = parseInt(xniz[i]);
        }

        for (var i = 0; i < yniz.length; i++) {
            yniz[i] = parseInt(yniz[i]);
        }
        //for (var i = 0; i < x.length; i++)
        //    alert(x[i]);

        //for (var i = 0; i < y.length; i++)
        //    alert(y[i]);

        var brojac = 0;

        function Spot(i, j) {
            this.i = i;
            this.j = j;
            this.f = 0;
            this.g = 0;
            this.h = 0;
            this.neighbors = [];
            this.previous = undefined;
            this.wall = false;

            //Randomly generating obstacles
            //if (random(1) < 0.3) {
            //    this.wall = true;
            //}

            for (var q = 0; q < xniz.length; q++) {
                if (xniz[q] == j && yniz[q] == i) {
                    this.wall = true;
                }
            }

            this.show = function (col) {
                fill(col);
                if (this.wall==true) {
                    fill(0,0,0,0);
                }
                noStroke();
               
                rect(this.i * w, this.j * h, w - 1, h - 1);
            }

            this.addNeighbors = function (grid) {
                var i = this.i;
                var j = this.j;
                if(i<cols-1)
                    this.neighbors.push(grid[i + 1][j]);
                if(i>0)
                    this.neighbors.push(grid[i - 1][j]);
                if(j<rows-1)
                    this.neighbors.push(grid[i][j + 1]);
                if(j>0)
                    this.neighbors.push(grid[i][j - 1]);
            }
        }

        function draw() {
            if (openSet.length > 0) {
                var winner = 0;

                for (var i = 0; i < openSet.length; i++) {
                    if (openSet[i].f < openSet[winner].f)
                        winner = i;
                }
                var current = openSet[winner];
                if (openSet[winner] === end) {
                    path = [];
                    var temp = current;
                    path.push(temp);
                    while (temp.previous) {
                        path.push(temp.previous);
                        temp = temp.previous;
                    }
                    noLoop();
                    console.log("DONE!");
                    noLoop();
                }

                removeFromArray(openSet, current);

                //openSet.remove(current);
                closedSet.push(current);

                var neighbors = current.neighbors;
                for (var i = 0; i < neighbors.length; i++) {
                    var neighbor = neighbors[i];

                    if (!closedSet.includes(neighbor) && !neighbor.wall) {
                        var tempG = current.g + 1;

                        if (openSet.includes(neighbor)) {
                            if (tempG < neighbor.g) {
                                neighbor.g = tempG;
                            }
                        }

                        else {
                            neighbor.g = tempG; 
                            openSet.push(neighbor);
                        }


                        neighbor.h = heuristic(neighbor, end);
                        neighbor.f = neighbor.g + neighbor.h;
                        neighbor.previous = current;
                    }

                }
            }
            else {
                console.log("No solution");
                //noLoop();
                return;
            }

            //background(150);

            for (var i = 0; i < cols; i++) {
                for (var j = 0; j < rows; j++) {
                    grid[i][j].show(color(0,0,0,0.1));
                }

            }

            for (var i = 0; i < closedSet.length; i++) {
                closedSet[i].show(color(255, 0, 0));
            } 

            for (var i = 0; i < openSet.length; i++) {
                openSet[i].show(color(0, 255, 0));

            } 

            //for (var i = 0; i < path.length; i++) {
            //    path[i].show(color(0, 0, 255));
            //}

            noFill();
            stroke(0);
            strokeWeight(w/5);
            beginShape();
            for (var i = 0; i < path.length; i++) {
                vertex(path[i].i * w + w / 2, path[i].j * h + h / 2);
            }
            endShape();
        }

        function setup() {
            createCanvas(1400, 800);//(širina, visina)
            console.log('A*');

            w = width / cols;
            h = height / rows;

            for (var i = 0; i < cols; i++) {
                grid[i] = new Array(rows);
            }
            console.log(grid);

            for (var i = 0; i < cols; i++) {
                for (var j = 0; j < rows; j++) {
                    grid[i][j] = new Spot(i, j);
        

                }
            }

            for (var i = 0; i < cols; i++) {
                for (var j = 0; j < rows; j++) {
                    grid[i][j].addNeighbors(grid);
                }
            }

        }

        function crtaj(pocetak, kraj) {
            var x = split(pocetak, "-");
            var y = split(kraj, "-");
            var x1 = parseInt(x[0]);
            var x2 = parseInt(x[1]);
            var y1 = parseInt(y[0]);
            var y2 = parseInt(y[1]);
            setup();
            draw();
            start = grid[x1][x2];
            end = grid[y1][y2];
            //start = grid[17][20];
            //end = grid[23][4];
            //end = grid[cols - 1][rows - 1];
            start.wall = false;
            end.wall = false;
            openSet.push(start);
        }

        //$(document).ready(function () {
        //    setup();
        //    draw();
        //    start = grid[17][20];
        //    end = grid[23][4];
        //    //end = grid[cols - 1][rows - 1];
        //    start.wall = false;
        //    end.wall = false;
        //    openSet.push(start);
        //});


    </script>

    <div id="sadrzaj" style="height:800px; width:1400px; border:1px solid black; display:block;position:relative; ">
    </div>
    <div id="trazilica" style="position:relative; display:block; height:800px; width:400px; right:60px; top:73px;">
        <input style="text-align:center;display:block;margin:5%; position:relative;width:50%; left:20%;" id="naziv"/>
        <select style="display:block;margin:5%;position:relative; width:50%; left:20%;" id="vrsta">
            <option>---Vrsta---</option>
        </select>
        <select style="display:block;margin:5%;position:relative;width:50%; left:20%;" id="brend">
            <option>---Brend---</option>
        </select>
        <button id="trazi" style="display:block;margin:5%;width:50%; left:20%; position:relative;" class="btn btn-primary">Traži</button>
        <button id="ponistiRutu" style="display:block;margin:5%;width:50%; left:20%; position:relative;" class="btn btn-danger" onclick="window.location.reload();">Poništi</button>
        <button id="trazi2" style="display:block;margin:5%;width:50%; left:20%; position:relative;" class="btn btn-primary">Traži 2</button>
        <input hidden="hidden" id="pocetak" value="0-0"/>
        <input hidden="hidden" id="kraj" value="49-49"/>

        <script>
            $("#trazi").click(function () {
                var array = document.getElementsByTagName("input");
                var x;
                var y;
                for (var i = 0; i < array.length; i++) {
                    if (array[i].id == "pocetak")
                        x = array[i].value;
                    if (array[i].id == "kraj")
                        y = array[i].value;
                }
                $("#ponistiRutu").show();
                $("#trazi").hide();
                
                crtaj(x, y);
            });

            $("#ponistiRutu").click(function () {
            });

             $("#trazi2").click(function () {
                var array = document.getElementsByTagName("input");
                var x="0-0";
                var y="2-4";


                crtaj(x, y);
            });
        </script>
    </div>
    <script>
        $(document).ready(function () {
            $("#ponistiRutu").hide();
        });

        var temp = '<div class="test ui-draggable ui-draggable-handle ui-resizable" id="action1" align="center" style="border: 1px solid black; height: 100px; transform: rotate(0deg); width: 100px; position: absolute; font-size: 20px; cursor: move; left: 202px; top: 445px; background-color: rgb(86, 231, 177);">test<div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div><div id="action2" class="test 2 ui-draggable ui-draggable-handle ui-resizable" align="center" style="border: 1px solid black; height: 481px; width: 100px; border-radius: 50%; transform: rotate(0deg); position: absolute; cursor: move; left: 563px; top: 40px; background-color: rgb(212, 94, 194);">test 2<div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></div><div id="action3" class="test3 ui-draggable ui-draggable-handle ui-resizable" align="center" style="border: 1px solid black; height: 76px; width: 440px; border-radius: 50%; transform: rotate(30deg); position: absolute; cursor: move; left: 655.474px; top: 113.091px; background-color: rgb(214, 104, 64);">test3<div class="ui-resizable-handle ui-resizable-e" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-s" style="z-index: 90;"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 90;"></div></di';
        document.getElementById("sadrzaj").innerHTML = temp;

    </script>
</body>
</html>