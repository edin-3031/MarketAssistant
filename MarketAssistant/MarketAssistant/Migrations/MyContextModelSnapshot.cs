// <auto-generated />
using System;
using MarketAssistant.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketAssistant.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarketAssistant.Models.Administrator", b =>
                {
                    b.Property<int>("AdministratorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<DateTime>("DatumZaposlenja");

                    b.Property<string>("Ime");

                    b.Property<string>("Mail");

                    b.Property<string>("Prezime");

                    b.Property<byte[]>("Slika");

                    b.Property<bool?>("Spol");

                    b.Property<int?>("Staz");

                    b.Property<string>("Telefon");

                    b.HasKey("AdministratorID");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("MarketAssistant.Models.Brend", b =>
                {
                    b.Property<int>("BrendID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("BrendID");

                    b.ToTable("Brend");
                });

            modelBuilder.Entity("MarketAssistant.Models.KorisnickiRacun", b =>
                {
                    b.Property<int>("korisnickiRacunID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Administrator_FK");

                    b.Property<bool?>("Aktivan");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("SifraHash");

                    b.Property<string>("SifraSalt");

                    b.HasKey("korisnickiRacunID");

                    b.HasIndex("Administrator_FK");

                    b.ToTable("KorisnickiRacun");
                });

            modelBuilder.Entity("MarketAssistant.Models.Market", b =>
                {
                    b.Property<int>("MarketID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Administrator_FK");

                    b.Property<string>("Adresa");

                    b.Property<string>("Naziv");

                    b.HasKey("MarketID");

                    b.HasIndex("Administrator_FK");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("MarketAssistant.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Administrator_FK");

                    b.Property<int?>("Brend_FK");

                    b.Property<DateTime?>("DatumProizvodnje");

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.Property<string>("Sastav");

                    b.Property<byte[]>("Slika");

                    b.Property<DateTime?>("TrajeDo");

                    b.Property<int?>("Vrsta_FK");

                    b.HasKey("ProizvodID");

                    b.HasIndex("Administrator_FK");

                    b.HasIndex("Brend_FK");

                    b.HasIndex("Vrsta_FK");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("MarketAssistant.Models.QR_Code", b =>
                {
                    b.Property<int>("QR_CodeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Market_FK");

                    b.Property<byte[]>("Slika");

                    b.HasKey("QR_CodeID");

                    b.HasIndex("Market_FK");

                    b.ToTable("QR_Code");
                });

            modelBuilder.Entity("MarketAssistant.Models.Sema", b =>
                {
                    b.Property<int>("SemaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Market_FK");

                    b.Property<string>("koordinatiZidova");

                    b.Property<string>("sema");

                    b.HasKey("SemaID");

                    b.HasIndex("Market_FK");

                    b.ToTable("Sema");
                });

            modelBuilder.Entity("MarketAssistant.Models.Vrsta", b =>
                {
                    b.Property<int>("VrstaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("VrstaID");

                    b.ToTable("Vrsta");
                });

            modelBuilder.Entity("MarketAssistant.Models.market_proizvod", b =>
                {
                    b.Property<int>("mpID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumDobavljanja");

                    b.Property<int?>("Market_FK");

                    b.Property<int?>("NaStanju");

                    b.Property<int?>("Proizvod_FK");

                    b.Property<bool?>("Rasprodano");

                    b.HasKey("mpID");

                    b.HasIndex("Market_FK");

                    b.HasIndex("Proizvod_FK");

                    b.ToTable("market_proizvod");
                });

            modelBuilder.Entity("MarketAssistant.Models.KorisnickiRacun", b =>
                {
                    b.HasOne("MarketAssistant.Models.Administrator", "Administrator")
                        .WithMany()
                        .HasForeignKey("Administrator_FK");
                });

            modelBuilder.Entity("MarketAssistant.Models.Market", b =>
                {
                    b.HasOne("MarketAssistant.Models.Administrator", "Administrator")
                        .WithMany()
                        .HasForeignKey("Administrator_FK");
                });

            modelBuilder.Entity("MarketAssistant.Models.Proizvod", b =>
                {
                    b.HasOne("MarketAssistant.Models.Administrator", "Administrator")
                        .WithMany()
                        .HasForeignKey("Administrator_FK");

                    b.HasOne("MarketAssistant.Models.Brend", "Brend")
                        .WithMany()
                        .HasForeignKey("Brend_FK");

                    b.HasOne("MarketAssistant.Models.Vrsta", "Vrsta")
                        .WithMany()
                        .HasForeignKey("Vrsta_FK");
                });

            modelBuilder.Entity("MarketAssistant.Models.QR_Code", b =>
                {
                    b.HasOne("MarketAssistant.Models.Market", "Market")
                        .WithMany()
                        .HasForeignKey("Market_FK");
                });

            modelBuilder.Entity("MarketAssistant.Models.Sema", b =>
                {
                    b.HasOne("MarketAssistant.Models.Market", "Market")
                        .WithMany()
                        .HasForeignKey("Market_FK");
                });

            modelBuilder.Entity("MarketAssistant.Models.market_proizvod", b =>
                {
                    b.HasOne("MarketAssistant.Models.Market", "Market")
                        .WithMany()
                        .HasForeignKey("Market_FK");

                    b.HasOne("MarketAssistant.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("Proizvod_FK");
                });
#pragma warning restore 612, 618
        }
    }
}
